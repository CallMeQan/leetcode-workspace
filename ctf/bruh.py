import base64

# 25669
base64_data = """
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
"""

# 25657
base64_data="""
/9j/4AAQSkZJRgABAQEBLAEsAAD/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdC
IFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAAAA9tYAAQAA
AADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFj
cHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAA
ABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAAD
TAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJD
AAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5
OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEA
AAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAA
AAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAA
AA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBo
dHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAt
IHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAt
IHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcg
Q29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENv
bmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAA
ABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAA
AAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAK
AA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUA
mgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEy
ATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMC
DAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMh
Ay0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4E
jASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3
BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDII
RghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqY
Cq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUAN
Wg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBh
EH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT
5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReu
F9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9oc
AhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCY
IMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZcl
xyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2
K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIx
SjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDec
N9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+
oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXe
RiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN
3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYP
VlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1f
D19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/
aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfBy
S3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyB
fOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuH
n4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLj
k02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6f
HZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1
q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm4
0blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZG
xsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnU
y9VO1dHWVdbY11
"""

# Combine all lines into a single string
base64_data = "".join(base64_data.strip().splitlines())

# Ensure proper Base64 padding
missing_padding = len(base64_data) % 4
if missing_padding != 0:
    base64_data += "=" * (4 - missing_padding)

# Decode the Base64 string
binary_data = base64.b64decode(base64_data)

# Save it as a .jpg file
with open("decoded_image.jpg", "wb") as file:
    file.write(binary_data)

print("Image saved as 'decoded_image.jpg'")