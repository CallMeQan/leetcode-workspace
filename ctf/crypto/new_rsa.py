from Crypto.Util.number import *

c=29185047167086032206639074142017774882966886086758895181744681537524924303284645105861658818013740976140042238477482298926193976247550706182012917287719985935305946723941172674542958463651731540986856064373721612862865830416245365486287717391833555269137898387000588310554112464299616534172503818195360543647
n=105853388078047173759898375285469749198262380185477505374660048133734851666191652192380587302506650106223506372472168631737421760943117686561822597783962635661917046611906287604775932337118934893918105802972937981039220543319709881759123959301737782299095430562809882288809914736237231658527613397008251912039
e=65537
m = 20670135079768795467034121034333328555471842771588618727276643543383790585362944962649613014044350654627499335246407710653513896302397788545840277288377984
phi = n - m + 1
d = pow(e, -1, phi)
data = long_to_bytes(pow(c, d, n))

print("Decrypted Data:")
print(data)

# Convert to hex
hex_representation = data.hex()
print("\nHexadecimal Representation:")
print(hex_representation)

# Extract printable ASCII
printable_ascii = ''.join(chr(c) if 32 <= c <= 126 else '.' for c in data)
print("\nPrintable ASCII:")
print(printable_ascii)

# Length of data
print("\nLength of data:", len(data))
